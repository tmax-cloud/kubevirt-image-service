#!/bin/bash

function print_help() {
    echo " $0 [command]
Test Toolbox

Available Commands:
  minikube [command]        download, start, clean
  rook_install
  build
  e2e
  lint
  unit
  codegen
  operator-sdk_install
" >&2
}

function wait_condition {
  cond=$1
  timeout=$2

  for ((i=0; i<timeout; i+=5)) do
    echo "Waiting for ${i}s condition: \"$cond\""
    if eval $cond > /dev/null 2>&1; then echo "Conditon met"; return 0; fi;
    sleep 5
    kubectl get pods -A
  done

  echo "Condition timeout"
  return 1
}

function minikube_command() {
  case "${1:-}" in
  download)
    curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    chmod +x minikube
    sudo mkdir -p /usr/local/bin/
    sudo install minikube /usr/local/bin/
    sudo snap install kubectl --classic
  ;;
  start)
    CHANGE_MINIKUBE_NONE_USER=true sudo -E minikube start --driver=none --kubernetes-version=v1.18.8
    sleep 3
  ;;
  clean)
    CHANGE_MINIKUBE_NONE_USER=true sudo -E minikube delete
    sudo rm -rf /var/lib/rook
  ;;
  *)
    print_help
  ;;
  esac
}

function rook_install_command() {
  kubectl apply -f deploy/rook-ceph/common.yaml
  kubectl apply -f deploy/rook-ceph/operator.yaml
  kubectl apply -f deploy/rook-ceph/cluster-test.yaml
  wait_condition "kubectl get cephclusters.ceph.rook.io -n rook-ceph | grep Created" 300
  kubectl apply -f deploy/rook-ceph/storageclass-test.yaml
  kubectl apply -f deploy/rook-ceph/snapshotclass.yaml
}

function codegen() {
  echo "Check go mod verify"
  gomodsha=$(sha512sum go.mod)
  gosumsha=$(sha512sum go.sum)
  go mod verify
  if [[ $gomodsha != $(sha512sum go.mod) ]]; then
    echo "ERROR: go.mod was modified by 'go mod verify'"
    exit 1
  fi
  if [[ $gosumsha != $(sha512sum go.sum) ]]; then
    echo "ERROR: go.sum was modified by 'go mod verify'"
    exit 1
  fi

  echo "Check operator-sdk generate"
  operator-sdk generate crds
  operator-sdk generate k8s
  if [[ $(git status --porcelain 2>/dev/null | wc -l) != 0 ]]; then
    echo "ERROR: The source code was modified by 'operator-sdk generate'"
    echo "If you haven't committed yet, Please commit and re-run it again"
    exit 1
  fi
}

case "${1:-}" in
minikube)
  minikube_command $2
  ;;
rook_install)
  rook_install_command
  ;;
operator-sdk_install)
  curl -Lo operator-sdk https://github.com/operator-framework/operator-sdk/releases/download/v0.17.1/operator-sdk-v0.17.1-x86_64-linux-gnu
  chmod +x operator-sdk && sudo mv operator-sdk /usr/local/bin
  ;;
build)
  operator-sdk build quay.io/tmaxanc/kubevirt-image-service:canary
  docker push quay.io/tmaxanc/kubevirt-image-service:canary
;;
lint)
  golangci-lint run ./... -v
;;
unit)
  go test -v ./pkg/... -ginkgo.v -ginkgo.failFast
;;
codegen)
  codegen
;;
e2e) 
  kubectl create -f ./deploy/namespace.yaml
  operator-sdk test local --operator-namespace kis ./e2e --debug --verbose --image quay.io/tmaxanc/kubevirt-image-service:canary
  kubectl delete -f ./deploy/namespace.yaml
  # Will not be necessary when sdk version goes up
  kubectl delete -f ./deploy/role.yaml
  kubectl delete -f ./deploy/role_binding.yaml
  ;;
*)
  print_help
;;
esac
